// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package urlshorter

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UrluhorterClient is the client API for Urluhorter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UrluhorterClient interface {
	Create(ctx context.Context, in *LongUrl, opts ...grpc.CallOption) (*ShortUrl, error)
	Get(ctx context.Context, in *ShortUrl, opts ...grpc.CallOption) (*LongUrl, error)
}

type urluhorterClient struct {
	cc grpc.ClientConnInterface
}

func NewUrluhorterClient(cc grpc.ClientConnInterface) UrluhorterClient {
	return &urluhorterClient{cc}
}

func (c *urluhorterClient) Create(ctx context.Context, in *LongUrl, opts ...grpc.CallOption) (*ShortUrl, error) {
	out := new(ShortUrl)
	err := c.cc.Invoke(ctx, "/urlshorter.urluhorter/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *urluhorterClient) Get(ctx context.Context, in *ShortUrl, opts ...grpc.CallOption) (*LongUrl, error) {
	out := new(LongUrl)
	err := c.cc.Invoke(ctx, "/urlshorter.urluhorter/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UrluhorterServer is the server API for Urluhorter service.
// All implementations must embed UnimplementedUrluhorterServer
// for forward compatibility
type UrluhorterServer interface {
	Create(context.Context, *LongUrl) (*ShortUrl, error)
	Get(context.Context, *ShortUrl) (*LongUrl, error)
	//mustEmbedUnimplementedUrluhorterServer()
}

// UnimplementedUrluhorterServer must be embedded to have forward compatible implementations.
type UnimplementedUrluhorterServer struct {
}

func (UnimplementedUrluhorterServer) Create(context.Context, *LongUrl) (*ShortUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedUrluhorterServer) Get(context.Context, *ShortUrl) (*LongUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedUrluhorterServer) mustEmbedUnimplementedUrluhorterServer() {}

// UnsafeUrluhorterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UrluhorterServer will
// result in compilation errors.
type UnsafeUrluhorterServer interface {
	mustEmbedUnimplementedUrluhorterServer()
}

func RegisterUrluhorterServer(s grpc.ServiceRegistrar, srv UrluhorterServer) {
	s.RegisterService(&Urluhorter_ServiceDesc, srv)
}

func _Urluhorter_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LongUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrluhorterServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/urlshorter.urluhorter/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrluhorterServer).Create(ctx, req.(*LongUrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Urluhorter_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrluhorterServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/urlshorter.urluhorter/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrluhorterServer).Get(ctx, req.(*ShortUrl))
	}
	return interceptor(ctx, in, info, handler)
}

// Urluhorter_ServiceDesc is the grpc.ServiceDesc for Urluhorter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Urluhorter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "urlshorter.urluhorter",
	HandlerType: (*UrluhorterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Urluhorter_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Urluhorter_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcurlshorter/proto/urlshorter.proto",
}
